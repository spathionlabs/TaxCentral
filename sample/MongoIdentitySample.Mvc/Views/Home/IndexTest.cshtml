@model IEnumerable<Main.Mvc.DBModels.MediaDetails>

@{
    Layout = "/Views/Shared/_LayoutHome.cshtml";
    ViewBag.Title = "Home Page";
}
<style>
    body {
        background-color: black;
    }
</style>


<div class="row">
    <div class="col-md-1">
        <ul>
            <li>Saved</li>
            <li>Groups</li>
            <li>Videos</li>

        </ul>
    </div>

    <div class="col-md-10">
        @foreach (var item in Model)
        {
            @if (item.UploadType == 0)
            {
            <div>
                <iframe width="420" height="315"
                        @*src="https://www.youtube.com/embed/tgbNymZ7vqY?controls=0"*@
                        src=@item.youtubeURL
                        >
                </iframe>
            </div>
            }

            <img src="https://www.w3schools.com/w3css/img_lights.jpg" alt="Lights" class="w3-image" width="420" height="315">
            <dl>



                <dt>Initialize ASP.NET Identity</dt>
                <dd>
                    You can initialize ASP.NET Identity when the application starts. Since ASP.NET Identity is Entity Framework based in this sample,
                    you can create DatabaseInitializer which is configured to get called each time the app starts.
                    <strong>Please look in App_Start\IdentityConfig.cs</strong>
                    This code shows the following
                    <ul>
                        <li>When should the Initializer run and when should the database be created</li>
                        <li>Create Admin user</li>
                        <li>Create Admin role</li>
                        <li>Add Admin user to Admin role</li>
                    </ul>
                </dd>
            </dl>
        }
        </div>
        
    <div class="col-md-1">
        <dl>
            <dt>Initialize ASP.NET Identity</dt>
            <dd>
                You can initialize ASP.NET Identity when the application starts. Since ASP.NET Identity is Entity Framework based in this sample,
                you can create DatabaseInitializer which is configured to get called each time the app starts.
                <strong>Please look in App_Start\IdentityConfig.cs</strong>
                This code shows the following
                <ul>
                    <li>When should the Initializer run and when should the database be created</li>
                    <li>Create Admin user</li>
                    <li>Create Admin role</li>
                    <li>Add Admin user to Admin role</li>
                </ul>
            </dd>
        </dl>
    </div>
</div>

