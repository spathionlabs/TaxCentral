<?xml version="1.0"?>
<doc>
  <assembly>
    <name>AspNetCore.Identity.MongoDbCore</name>
  </assembly>
  <members>
    <member name="T:AspNetCore.Identity.MongoDbCore.Extensions.ClaimHolderExtensions">
      <summary>
        The extensions for an object that holds claims.
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Extensions.ClaimHolderExtensions.ToMongoClaim(System.Security.Claims.Claim)">
      <summary>
        Creates a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoClaim"/> object from a <see cref="T:System.Security.Claims.Claim"/>
      </summary>
      <param name="claim">
        The <see cref="T:System.Security.Claims.Claim"/>.
      </param>
      <returns>
        A <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoClaim"/>.
      </returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Extensions.ClaimHolderExtensions.ToClaim(AspNetCore.Identity.MongoDbCore.Models.MongoClaim)">
      <summary>
        Creates a <see cref="T:System.Security.Claims.Claim"/> object from a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoClaim"/>
      </summary>
      <param name="mongoClaim">
        A <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoClaim"/>.
      </param>
      <returns>
        A <see cref="T:System.Security.Claims.Claim"/>.
      </returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Extensions.ClaimHolderExtensions.AddClaim(AspNetCore.Identity.MongoDbCore.Interfaces.IClaimHolder,System.Security.Claims.Claim)">
      <summary>
        Adds a claim to a claim holder, implementing <see cref="T:AspNetCore.Identity.MongoDbCore.Interfaces.IClaimHolder"/>.
      </summary>
      <param name="claimHolder">The object holding claims.</param>
      <param name="claim">The claim you want to add.</param>
      <returns>Returns true if the claim was added.</returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Extensions.ClaimHolderExtensions.ReplaceClaim(AspNetCore.Identity.MongoDbCore.Interfaces.IClaimHolder,System.Security.Claims.Claim,System.Security.Claims.Claim)">
      <summary>
        Replaces a claim on a claim holder, implementing <see cref="T:AspNetCore.Identity.MongoDbCore.Interfaces.IClaimHolder"/>.
      </summary>
      <param name="claimHolder">The object holding claims.</param>
      <param name="claim">The claim you want to replace.</param>
      <param name="newClaim">The new claim you want to set.</param>
      <returns>Returns true if the claim was replaced.</returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Extensions.ClaimHolderExtensions.HasClaim(AspNetCore.Identity.MongoDbCore.Interfaces.IClaimHolder,System.Security.Claims.Claim)">
      <summary>
        Checks if an object implementing <see cref="T:AspNetCore.Identity.MongoDbCore.Interfaces.IClaimHolder"/> has a claim.
      </summary>
      <param name="claimHolder">The object holding claims.</param>
      <param name="claim">The claim you want to replace.</param>
      <returns>Returns true if the claim is present, false otherwise.</returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Extensions.ClaimHolderExtensions.RemoveClaim(AspNetCore.Identity.MongoDbCore.Interfaces.IClaimHolder,System.Security.Claims.Claim)">
      <summary>
        Removes a <see cref="T:System.Security.Claims.Claim"/> from the <see cref="T:AspNetCore.Identity.MongoDbCore.Interfaces.IClaimHolder"/>.
      </summary>
      <param name="claimHolder">The holder of the claim.</param>
      <param name="claim">
        The <see cref="T:System.Security.Claims.Claim"/> to remove.
      </param>
      <returns>True is the claim was successfully removed.</returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Extensions.ClaimHolderExtensions.RemoveClaims(AspNetCore.Identity.MongoDbCore.Interfaces.IClaimHolder,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
      <summary>
        Removes an IEnumerable of <see cref="T:System.Security.Claims.Claim"/>s from the <see cref="T:AspNetCore.Identity.MongoDbCore.Interfaces.IClaimHolder"/>.
      </summary>
      <param name="claimHolder">The holder of the claims.</param>
      <param name="claims">
        The <see cref="T:System.Security.Claims.Claim"/>s to remove.
      </param>
      <returns>True is the claims were successfully removed.</returns>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Extensions.RandomExtensions">
      <summary>
        Extensions for the random number generator <see cref="T:System.Random"/>
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Extensions.RandomExtensions.NextLong(System.Random,System.Int64,System.Int64)">
      <summary>
        Returns a random long from min (inclusive) to max (exclusive)
      </summary>
      <param name="random">The given random instance</param>
      <param name="min">The inclusive minimum bound</param>
      <param name="max">The exclusive maximum bound.  Must be greater than min</param>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Extensions.RandomExtensions.NextLong(System.Random,System.Int64)">
      <summary>
        Returns a random long from 0 (inclusive) to max (exclusive)
      </summary>
      <param name="random">The given random instance</param>
      <param name="max">The exclusive maximum bound.  Must be greater than 0</param>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Extensions.RandomExtensions.NextLong(System.Random)">
      <summary>
        Returns a random long over all possible values of long (except long.MaxValue, similar to
        random.Next())
      </summary>
      <param name="random">The given random instance</param>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Extensions.ServiceCollectionExtension">
      <summary>
        Contains extension methods to <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> for adding mongoDb Identity.
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Extensions.ServiceCollectionExtension.ConfigureMongoDbIdentityUserOnly``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,AspNetCore.Identity.MongoDbCore.Infrastructure.MongoDbIdentityConfiguration)">
      <summary>
        Configures the MongoDb Identity store adapters for the types of TUser only from <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1"/>.
      </summary>
      <typeparam name="TUser">The type representing a user.</typeparam>
      <typeparam name="TKey">The type of the primary key of the identity document.</typeparam>
      <param name="services">The collection of service descriptors.</param>
      <param name="mongoDbIdentityConfiguration">A configuration object of the AspNetCore.Identity.MongoDbCore package.</param>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Extensions.ServiceCollectionExtension.ConfigureMongoDbIdentity``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,AspNetCore.Identity.MongoDbCore.Infrastructure.MongoDbIdentityConfiguration)">
      <summary>
        Configures the MongoDb Identity store adapters for the types of TUser only inheriting from <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser"/>.
      </summary>
      <typeparam name="TUser">The type representing a user.</typeparam>
      <param name="services">The collection of service descriptors.</param>
      <param name="mongoDbIdentityConfiguration">A configuration object of the AspNetCore.Identity.MongoDbCore package.</param>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Extensions.ServiceCollectionExtension.ValidateMongoDbSettings(AspNetCore.Identity.MongoDbCore.Infrastructure.MongoDbSettings)">
      <summary>
        Validates the MongoDbSettings
      </summary>
      <param name="mongoDbSettings"></param>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Extensions.ServiceCollectionExtension.ConfigureMongoDbIdentity``3(Microsoft.Extensions.DependencyInjection.IServiceCollection,AspNetCore.Identity.MongoDbCore.Infrastructure.MongoDbIdentityConfiguration,MongoDbGenericRepository.IMongoDbContext)">
      <summary>
        Configures the MongoDb Identity store adapters for the types of TUser and TRole.
      </summary>
      <typeparam name="TUser">The type representing a user.</typeparam>
      <typeparam name="TRole">The type representing a role.</typeparam>
      <typeparam name="TKey">The type of the primary key of the identity document.</typeparam>
      <param name="services">The collection of service descriptors.</param>
      <param name="mongoDbIdentityConfiguration">A configuration object of the AspNetCore.Identity.MongoDbCore package.</param>
      <param name="mongoDbContext">An object representing a MongoDb connection.</param>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Extensions.StringExtensions">
      <summary>
        A set of extensions for string.
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Extensions.StringExtensions.ToTKey``1(System.String)">
      <summary>
        Converts the provided <paramref name="id"/> to a strongly typed key object.
      </summary>
      <typeparam name="TKey"></typeparam>
      <param name="id"></param>
      <returns></returns>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.GlobalVariables">
      <summary>
        A class holding global variables.
      </summary>
    </member>
    <member name="F:AspNetCore.Identity.MongoDbCore.GlobalVariables.Random">
      <summary>
        A random number generator.
      </summary>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Infrastructure.MongoDbIdentityConfiguration">
      <summary>
        A class used to perform a full configuration of the AspNetCore.Identity.MongoDbCore package.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Infrastructure.MongoDbIdentityConfiguration.MongoDbSettings">
      <summary>
        The settings for the MongoDb server.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Infrastructure.MongoDbIdentityConfiguration.IdentityOptionsAction">
      <summary>
        An action against an <see cref="T:Microsoft.AspNetCore.Identity.IdentityOptions"/> to change the default identity settings.
      </summary>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Infrastructure.MongoDbSettings">
      <summary>
        A class representing the settings for the MongoDb server.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Infrastructure.MongoDbSettings.ConnectionString">
      <summary>
        The connection string for the MongoDb server.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Infrastructure.MongoDbSettings.DatabaseName">
      <summary>
        The name of the MongoDb database where the identity data will be stored.
      </summary>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Infrastructure.IMongoRepository">
      <summary>
        The repository used in the MongoDb identity stores.
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Infrastructure.IMongoRepository.DropCollection``1">
      <summary>
        Drops a collections.
      </summary>
      <typeparam name="TDocument">The type of the document used to define the collection name.</typeparam>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Infrastructure.IMongoRepository.DropCollection``1(System.String)">
      <summary>
        Drops a partitioned collection.
      </summary>
      <typeparam name="TDocument">The type of the document used to define the collection name.</typeparam>
      <param name="partitionKey">The partition key of the collection.</param>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Infrastructure.IMongoRepository.Context">
      <summary>
        The MongoDb context.
      </summary>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Infrastructure.MongoRepository">
      <summary>
        The repository used in the MongoDb identity stores.
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Infrastructure.MongoRepository.#ctor(System.String,System.String)">
      <summary>
        The constructor for <see cref="T:AspNetCore.Identity.MongoDbCore.Infrastructure.MongoRepository"/> requiring a connection string and a database name.
      </summary>
      <param name="connectionString">The connection string.</param>
      <param name="databaseName">The database name.</param>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Infrastructure.MongoRepository.#ctor(MongoDbGenericRepository.IMongoDbContext)">
      <summary>
        The constructor for <see cref="T:AspNetCore.Identity.MongoDbCore.Infrastructure.MongoRepository"/> requiring a <see cref="T:MongoDbGenericRepository.IMongoDbContext"/>.
      </summary>
      <param name="mongoDbContext">
        A <see cref="T:MongoDbGenericRepository.IMongoDbContext"/>.
      </param>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Infrastructure.MongoRepository.DropCollection``1">
      <summary>
        Drops a collections.
      </summary>
      <typeparam name="TDocument">The type of the document used to define the collection name.</typeparam>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Infrastructure.MongoRepository.DropCollection``1(System.String)">
      <summary>
        Drops a partitioned collection.
      </summary>
      <typeparam name="TDocument">The type of the document used to define the collection name.</typeparam>
      <param name="partitionKey">The partition key of the collection.</param>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Infrastructure.MongoRepository.Context">
      <summary>
        The MongoDb context.
      </summary>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Interfaces.IClaimHolder">
      <summary>
        The interface for an object that holds claims.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Interfaces.IClaimHolder.Claims">
      <summary>
        The claims the <see cref="T:AspNetCore.Identity.MongoDbCore.Interfaces.IClaimHolder"/> has.
      </summary>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Models.MongoClaim">
      <summary>
        A class representing the claims a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1"/> can have.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Models.MongoClaim.Type">
      <summary>
        The type of the claim.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Models.MongoClaim.Value">
      <summary>
        The value of the claim.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Models.MongoClaim.Issuer">
      <summary>
        The issuer of the claim.
      </summary>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Models.MongoDbIdentityRole">
      <summary>
        A <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole`1"/> where TKey is a <see cref="T:System.String"/>
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoDbIdentityRole.#ctor">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoDbIdentityRole"/>
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoDbIdentityRole.#ctor(System.String)">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoDbIdentityRole"/>, taking a role name.
      </summary>
      <param name="roleName">The name of the role.</param>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole">
      <summary>
        A <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole`1"/> where TKey is a <see cref="T:System.Guid"/>
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole.#ctor">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole"/>
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole.#ctor(System.String)">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole"/>, taking a role name.
      </summary>
      <param name="roleName">The name of the role.</param>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole`1">
      <summary>
        A document representing an <see cref="T:Microsoft.AspNetCore.Identity.IdentityRole`1"/> document.
      </summary>
      <typeparam name="TKey">The type of the primary key.</typeparam>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole`1.#ctor">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole`1"/>
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole`1.#ctor(System.String)">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole`1"/>, taking a role name.
      </summary>
      <param name="roleName">The name of the role.</param>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole`1.InitializeFields">
      <summary>
        Initialize the field of the MongoIdentityRole
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole`1.#ctor(System.String,`0)">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole`1"/>, taking a role name and a primary key value.
      </summary>
      <param name="name">The name of the role.</param>
      <param name="key">The value of the primary key</param>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole`1.Version">
      <summary>
        The version of the role schema
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityRole`1.Claims">
      <summary>
        The claims associated to the role
      </summary>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Models.MongoDbIdentityUser">
      <summary>
        A <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1"/> where TKey is a <see cref="T:System.String"/>
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoDbIdentityUser.#ctor">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoDbIdentityUser"/>
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoDbIdentityUser.#ctor(System.String)">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoDbIdentityUser"/>, taking a username.
      </summary>
      <param name="userName">The name of the user.</param>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoDbIdentityUser.#ctor(System.String,System.String)">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoDbIdentityUser"/>, taking a username and an email address.
      </summary>
      <param name="userName">The name of the user.</param>
      <param name="email">The email address of the user.</param>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser">
      <summary>
        A <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1"/> where TKey is a <see cref="T:System.Guid"/>
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser.#ctor">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser"/>
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser.#ctor(System.String)">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoDbIdentityUser"/>, taking a username.
      </summary>
      <param name="userName">The name of the user.</param>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser.#ctor(System.String,System.String)">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoDbIdentityUser"/>, taking a username and an email address.
      </summary>
      <param name="userName">The name of the user.</param>
      <param name="email">The email address of the user.</param>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1">
      <summary>
        A document representing an <see cref="T:Microsoft.AspNetCore.Identity.IdentityUser`1"/> document.
      </summary>
      <typeparam name="TKey">The type of the primary key.</typeparam>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.Version">
      <summary>
        The version of the schema do the <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1"/> document.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.CreatedOn">
      <summary>
        The date and time at which this user was created, in UTC.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.Claims">
      <summary>
        The claims this user has.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.Roles">
      <summary>
        The role Ids of the roles that this user has.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.Logins">
      <summary>
        The list of <see cref="T:Microsoft.AspNetCore.Identity.UserLoginInfo"/>s that this user has.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.Tokens">
      <summary>
        The list of <see cref="T:AspNetCore.Identity.MongoDbCore.Models.Token"/>s that this user has.
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.#ctor">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1"/>, taking a username and an email address.
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.#ctor(System.String,System.String)">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1"/>, taking a username and an email address.
      </summary>
      <param name="userName">The name of the user.</param>
      <param name="email">The email address of the user.</param>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.#ctor(System.String)">
      <summary>
        The constructor for a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1"/>, taking a username.
      </summary>
      <param name="userName">The name of the user.</param>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.InitializeFields">
      <summary>
        Initialize the field of the MongoIdentityUser
      </summary>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.SetVersion(System.Int32)">
      <summary>
        Sets the version of the schema for the <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1"/> document.
      </summary>
      <param name="version"></param>
      <returns></returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.RemoveRole(`0)">
      <summary>
        Removes a role.
      </summary>
      <param name="roleId">The Id of the role you want to remove.</param>
      <returns>True if the removal was successful.</returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.AddRole(`0)">
      <summary>
        Add a role to the user.
      </summary>
      <param name="roleId">The Id of the role you want to add.</param>
      <returns>True if the addition was successful.</returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.AddLogin(Microsoft.AspNetCore.Identity.UserLoginInfo)">
      <summary>
        Adds a user login to the user.
      </summary>
      <param name="userLoginInfo">
        The <see cref="T:Microsoft.AspNetCore.Identity.UserLoginInfo"/> you want to add.
      </param>
      <returns>True if the addition was successful.</returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.HasLogin(Microsoft.AspNetCore.Identity.UserLoginInfo)">
      <summary>
        Checks if the user has the given <see cref="T:Microsoft.AspNetCore.Identity.UserLoginInfo"/>.
      </summary>
      <param name="userLoginInfo">
        The <see cref="T:Microsoft.AspNetCore.Identity.UserLoginInfo"/> we are looking for.
      </param>
      <returns>
        True if the user has the given <see cref="T:Microsoft.AspNetCore.Identity.UserLoginInfo"/>.
      </returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.RemoveLogin(Microsoft.AspNetCore.Identity.UserLoginInfo)">
      <summary>
        Removes a <see cref="T:Microsoft.AspNetCore.Identity.UserLoginInfo"/> from the user.
      </summary>
      <param name="userLoginInfo"></param>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.GetUserLogin(System.String,System.String)">
      <summary>

      </summary>
      <param name="loginProvider"></param>
      <param name="providerKey"></param>
      <returns></returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.SetToken(Microsoft.AspNetCore.Identity.IdentityUserToken{`0},System.String)">
      <summary>
        Sets the token to a new value.
      </summary>
      <param name="tokenToset">The token you want to set you want to set.</param>
      <param name="value">The value you want to set the token to.</param>
      <returns>Returns true if the token was successfully set.</returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.GetToken(System.String,System.String)">
      <summary>
        Gets a token given the login provider and the name.
      </summary>
      <param name="loginProvider">The value for the login provider.</param>
      <param name="name">The name of the token.</param>
      <returns>
        An <see cref="T:Microsoft.AspNetCore.Identity.IdentityUser`1"/> if found, or null.
      </returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.HasToken(Microsoft.AspNetCore.Identity.IdentityUserToken{`0})">
      <summary>
        Checks if a user has the given token.
      </summary>
      <param name="token">The token you are looking for.</param>
      <returns>True if the user has the given token</returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.AddUserToken``1(``0)">
      <summary>
        Adds a token to the user.
      </summary>
      <typeparam name="TUserToken">The type of the token.</typeparam>
      <param name="token">The token you want to add.</param>
      <returns>True if the addition was successful.</returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1.RemoveUserToken``1(``0)">
      <summary>
        Removes a token from the user.
      </summary>
      <typeparam name="TUserToken">The type of the token.</typeparam>
      <param name="token">The token you want to remove.</param>
      <returns>True if the removal was successful.</returns>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.Models.Token">
      <summary>
        A class representing the tokens a <see cref="T:AspNetCore.Identity.MongoDbCore.Models.MongoIdentityUser`1"/> can have.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Models.Token.LoginProvider">
      <summary>
        Gets or sets the LoginProvider this token is from.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Models.Token.Name">
      <summary>
        Gets or sets the name of the token.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.Models.Token.Value">
      <summary>
        Gets or sets the token value.
      </summary>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.MongoRoleStore`1">
      <summary>
        Creates a new instance of a persistence store for roles.
      </summary>
      <typeparam name="TRole">The type of the class representing a role</typeparam>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.MongoRoleStore`1.#ctor(MongoDbGenericRepository.IMongoDbContext,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)">
      <summary>
        Constructs a new instance of <see cref="T:AspNetCore.Identity.MongoDbCore.MongoRoleStore`1"/>.
      </summary>
      <param name="context">
        The <see cref="T:MongoDbGenericRepository.IMongoDbContext"/>.
      </param>
      <param name="describer">
        The <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber"/>.
      </param>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.MongoRoleStore`2">
      <summary>
        Creates a new instance of a persistence store for roles.
      </summary>
      <typeparam name="TRole">The type of the class representing a role.</typeparam>
      <typeparam name="TContext">The type of the data context class used to access the store.</typeparam>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.MongoRoleStore`2.#ctor(`1,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)">
      <summary>
        Constructs a new instance of <see cref="T:AspNetCore.Identity.MongoDbCore.MongoRoleStore`2"/>.
      </summary>
      <param name="context">
        The <see cref="T:MongoDbGenericRepository.IMongoDbContext"/>.
      </param>
      <param name="describer">
        The <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber"/>.
      </param>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.MongoRoleStore`3">
      <summary>
        Creates a new instance of a persistence store for roles.
      </summary>
      <typeparam name="TRole">The type of the class representing a role.</typeparam>
      <typeparam name="TContext">The type of the data context class used to access the store.</typeparam>
      <typeparam name="TKey">The type of the primary key for a role.</typeparam>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.MongoRoleStore`3.#ctor(MongoDbGenericRepository.IMongoDbContext,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)">
      <summary>
        Constructs a new instance of <see cref="T:AspNetCore.Identity.MongoDbCore.MongoRoleStore`3"/>.
      </summary>
      <param name="context">
        The <see cref="T:MongoDbGenericRepository.IMongoDbContext"/>.
      </param>
      <param name="describer">
        The <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber"/>.
      </param>
    </member>
    <member name="T:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5">
      <summary>
        Creates a new instance of a persistence store for roles.
      </summary>
      <typeparam name="TRole">The type of the class representing a role.</typeparam>
      <typeparam name="TContext">The type of the data context class used to access the store.</typeparam>
      <typeparam name="TKey">The type of the primary key for a role.</typeparam>
      <typeparam name="TUserRole">The type of the class representing a user role.</typeparam>
      <typeparam name="TRoleClaim">The type of the class representing a role claim.</typeparam>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.#ctor(MongoDbGenericRepository.IMongoDbContext,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)">
      <summary>
        Constructs a new instance of <see cref="T:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5"/>.
      </summary>
      <param name="context">
        The <see cref="T:MongoDbGenericRepository.IMongoDbContext"/>.
      </param>
      <param name="describer">
        The <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber"/>.
      </param>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.Context">
      <summary>
        Gets the database context for this store.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.Roles">
      <summary>
        A navigation property for the roles the store contains.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.RolesCollection">
      <summary>
        A navigation property for the roles the store contains.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.ErrorDescriber">
      <summary>
        Gets or sets the <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber"/> for any error that occurred with the current operation.
      </summary>
    </member>
    <member name="P:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.AutoSaveChanges">
      <summary>
        Gets or sets a flag indicating if changes should be persisted after CreateAsync, UpdateAsync and DeleteAsync are called.
      </summary>
      <value>
        True if changes should be automatically persisted, otherwise false.
      </value>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)">
      <summary>
        Creates a new role in a store as an asynchronous operation.
      </summary>
      <param name="role">The role to create in the store.</param>
      <param name="cancellationToken">
        The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.
      </param>
      <returns>
        A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the <see cref="T:Microsoft.AspNetCore.Identity.IdentityResult"/> of the asynchronous query.
      </returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)">
      <summary>
        Updates a role in a store as an asynchronous operation.
      </summary>
      <param name="role">The role to update in the store.</param>
      <param name="cancellationToken">
        The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.
      </param>
      <returns>
        A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the <see cref="T:Microsoft.AspNetCore.Identity.IdentityResult"/> of the asynchronous query.
      </returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)">
      <summary>
        Deletes a role from the store as an asynchronous operation.
      </summary>
      <param name="role">The role to delete from the store.</param>
      <param name="cancellationToken">
        The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.
      </param>
      <returns>
        A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the <see cref="T:Microsoft.AspNetCore.Identity.IdentityResult"/> of the asynchronous query.
      </returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)">
      <summary>
        Gets the ID for a role from the store as an asynchronous operation.
      </summary>
      <param name="role">The role whose ID should be returned.</param>
      <param name="cancellationToken">
        The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.
      </param>
      <returns>
        A <see cref="T:System.Threading.Tasks.Task`1"/> that contains the ID of the role.
      </returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)">
      <summary>
        Gets the name of a role from the store as an asynchronous operation.
      </summary>
      <param name="role">The role whose name should be returned.</param>
      <param name="cancellationToken">
        The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.
      </param>
      <returns>
        A <see cref="T:System.Threading.Tasks.Task`1"/> that contains the name of the role.
      </returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)">
      <summary>
        Sets the name of a role in the store as an asynchronous operation.
      </summary>
      <param name="role">The role whose name should be set.</param>
      <param name="roleName">The name of the role.</param>
      <param name="cancellationToken">
        The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.
      </param>
      <returns>
        The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
      </returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.ConvertIdFromString(System.String)">
      <summary>
        Converts the provided <paramref name="id"/> to a strongly typed key object.
      </summary>
      <param name="id">The id to convert.</param>
      <returns>
        An instance of <typeparamref name="TKey"/> representing the provided <paramref name="id"/>.
      </returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.ConvertIdToString(`2)">
      <summary>
        Converts the provided <paramref name="id"/> to its string representation.
      </summary>
      <param name="id">The id to convert.</param>
      <returns>
        An <see cref="T:System.String"/> representation of the provided <paramref name="id"/>.
      </returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)">
      <summary>
        Finds the role who has the specified ID as an asynchronous operation.
      </summary>
      <param name="id">The role ID to look for.</param>
      <param name="cancellationToken">
        The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.
      </param>
      <returns>
        A <see cref="T:System.Threading.Tasks.Task`1"/> that result of the look up.
      </returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)">
      <summary>
        Finds the role who has the specified normalized name as an asynchronous operation.
      </summary>
      <param name="normalizedName">The normalized role name to look for.</param>
      <param name="cancellationToken">
        The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.
      </param>
      <returns>
        A <see cref="T:System.Threading.Tasks.Task`1"/> that result of the look up.
      </returns>
    </member>
    <member name="M:AspNetCore.Identity.MongoDbCore.MongoRoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)">
      <summary>
        Get a role's normalized name as an asynchronous operation.
      </summary>
      <param name="role">The role whose normalized name should be retrieved.</param>
      <param name="cancellationToken">The </param>
    </member>
  </members>
</doc>